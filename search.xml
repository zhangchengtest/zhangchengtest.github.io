<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[use local search]]></title>
      <url>http://blog.zhangcheng.club/2016/05/12/install-search/</url>
      <content type="html"><![CDATA[<p>参考连接:<br><a href="http://jeffworkshop.com/2016/01/01/hexo-Local-Search/" target="_blank" rel="external">http://jeffworkshop.com/2016/01/01/hexo-Local-Search/</a><br><a href="http://hahack.com/codes/local-search-engine-for-hexo/#stq=&amp;stp=0" target="_blank" rel="external">http://hahack.com/codes/local-search-engine-for-hexo/#stq=&amp;stp=0</a></p>
<p>不用swittype, fuck, it need money.</p>
<p>create a file in search folder in the source folder<br>then cd search folder, then create the index.md,<br>then we put all the stuff, like html css javascript and jquery ,which methiond in the refer file, in the index.md.<br>and you need to change the script code<br>then you can request page by <a href="http://yoursite.com/search" target="_blank" rel="external">http://yoursite.com/search</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[tomcat在linux下以tomcat身份运行]]></title>
      <url>http://blog.zhangcheng.club/2016/05/11/tomcat%E5%9C%A8linux%E4%B8%8B%E4%BB%A5tomcat%E8%BA%AB%E4%BB%BD%E8%BF%90%E8%A1%8C/</url>
      <content type="html"><![CDATA[<p>title: tomcat在linux下以tomcat身份运行</p>
<h2 id="tags"><a href="#tags" class="headerlink" title="tags:"></a>tags:</h2><p>参考链接</p>
<p><a href="http://blog.csdn.net/headman/article/details/24392463" target="_blank" rel="external">http://blog.csdn.net/headman/article/details/24392463</a></p>
<p>日志的输出为catalina-deamon.out<br>它不会做切割 会越来越大<br>可以参考链接<br><a href="http://www.bubuko.com/infodetail-603906.html" target="_blank" rel="external">http://www.bubuko.com/infodetail-603906.html</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[git升级]]></title>
      <url>http://blog.zhangcheng.club/2016/04/29/git%E5%8D%87%E7%BA%A7/</url>
      <content type="html"><![CDATA[<p>title: git升级</p>
<h2 id="tags"><a href="#tags" class="headerlink" title="tags:"></a>tags:</h2><p>参考链接<br><a href="http://www.dbpoo.com/centos-65-git-update/" target="_blank" rel="external">http://www.dbpoo.com/centos-65-git-update/</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[jenkins升级]]></title>
      <url>http://blog.zhangcheng.club/2016/04/29/jenkins%E5%8D%87%E7%BA%A7/</url>
      <content type="html"><![CDATA[<p>title: jenkins升级</p>
<h2 id="tags"><a href="#tags" class="headerlink" title="tags:"></a>tags:</h2><p>运行程序jenkins.war可以在任意的tomcat运行<br>将jenkins home 即（.jenkins）中的东西打包就行<br>可以删除jobs内的module内容<br>如果可以 删除历史记录<br>解压 tar zxvf 文件名.tar.gz<br>压缩 tar zcvf 文件名.tar.gz 目标名</p>
<p>Failed to connect to repository : Could not init<br>Path to Git executable should be configured right</p>
<p>git升级后出现<br>error: unable to read askpass response from ‘/usr/libexec/openssh/gnome-ssh-askpass’<br>执行<br>unset SSH_ASKPASS</p>
<p>http proxy should remove </p>
<p>Maven Home /data/maven doesn’t exist<br>change to /data/apache-maven-3.2.5</p>
<p>/data/home/settings.xml 找不到<br>真是见鬼了<br>项目本身还可以配置setting.xml</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[cas 源码学习]]></title>
      <url>http://blog.zhangcheng.club/2016/04/19/cas-%E6%BA%90%E7%A0%81%E5%AD%A6%E4%B9%A0/</url>
      <content type="html"><![CDATA[<p>title: cas 源码学习</p>
<h2 id="tags"><a href="#tags" class="headerlink" title="tags:"></a>tags:</h2><p>LDAP是轻量目录访问协议, 没用过</p>
<p>1.替换登陆页面(casLoginView)</p>
<p>2.使用http 不用https<br>参考链接<br><a href="http://blog.csdn.net/ycyk_168/article/details/18668951" target="_blank" rel="external">http://blog.csdn.net/ycyk_168/article/details/18668951</a></p>
<p><a href="http://oma1989.iteye.com/blog/2162452" target="_blank" rel="external">http://oma1989.iteye.com/blog/2162452</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[spring security 自定义filter ]]></title>
      <url>http://blog.zhangcheng.club/2016/04/13/spring-security-%E8%87%AA%E5%AE%9A%E4%B9%89filter/</url>
      <content type="html"><![CDATA[<p>title: ‘spring security 自定义filter ‘</p>
<h2 id="tags"><a href="#tags" class="headerlink" title="tags:"></a>tags:</h2><p>参考链接</p>
<p><a href="http://www.cnblogs.com/yjmyzz/p/3888507.html" target="_blank" rel="external">http://www.cnblogs.com/yjmyzz/p/3888507.html</a></p>
<p>1.跳转到原来的请求</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[目标设定]]></title>
      <url>http://blog.zhangcheng.club/2016/04/13/%E7%9B%AE%E6%A0%87%E8%AE%BE%E5%AE%9A/</url>
      <content type="html"><![CDATA[<p>title: 目标设定</p>
<h2 id="tags"><a href="#tags" class="headerlink" title="tags:"></a>tags:</h2><p>听听歌，锻炼身体，享受人生，活在当下</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[spring security改变默认登陆页面]]></title>
      <url>http://blog.zhangcheng.club/2016/04/10/spring-security%E6%94%B9%E5%8F%98%E9%BB%98%E8%AE%A4%E7%99%BB%E9%99%86%E9%A1%B5%E9%9D%A2/</url>
      <content type="html"><![CDATA[<p>title: spring security改变默认登陆页面</p>
<h2 id="tags"><a href="#tags" class="headerlink" title="tags:"></a>tags:</h2><p>参考链接<br><a href="http://docs.spring.io/spring-security/site/docs/3.2.x/guides/form.html" target="_blank" rel="external">http://docs.spring.io/spring-security/site/docs/3.2.x/guides/form.html</a></p>
<p>自定义登陆方法<br><a href="http://spr.com/part-5-integrating-spring-security-with-spring-boot-web/" target="_blank" rel="external">http://spr.com/part-5-integrating-spring-security-with-spring-boot-web/</a></p>
<p>有12个默认的拦截器<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@<span class="number">161876</span>d</span><br><span class="line"> org.springframework.security.web.context.SecurityContextPersistenceFilter@<span class="number">934246</span></span><br><span class="line"> org.springframework.security.web.header.HeaderWriterFilter@<span class="number">11</span>be4a</span><br><span class="line"> org.springframework.security.web.csrf.CsrfFilter@<span class="number">29452</span></span><br><span class="line"> org.springframework.security.web.authentication.logout.LogoutFilter@<span class="number">94</span>b17e</span><br><span class="line"> org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@<span class="number">10</span>ceac</span><br><span class="line"> org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@<span class="number">730</span>c0f</span><br><span class="line"> org.springframework.security.web.savedrequest.RequestCacheAwareFilter@<span class="number">1e40</span>d3e</span><br><span class="line"> org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@<span class="number">12170</span>c6</span><br><span class="line"> org.springframework.security.web.session.SessionManagementFilter<span class="meta">@e</span>41e92</span><br><span class="line"> org.springframework.security.web.access.ExceptionTranslationFilter<span class="meta">@c</span>94dc8</span><br><span class="line"> org.springframework.security.web.access.intercept.FilterSecurityInterceptor<span class="meta">@f</span>40b6</span><br><span class="line"> ]</span><br></pre></td></tr></table></figure></p>
<p>access deny<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">org.springframework.security.web.access.expression.DefaultWebSecurityExpressionHandler@<span class="number">91f</span>79a</span><br></pre></td></tr></table></figure></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Filter的应用]]></title>
      <url>http://blog.zhangcheng.club/2016/04/10/Filter%E7%9A%84%E5%BA%94%E7%94%A8/</url>
      <content type="html"><![CDATA[<p>title: Filter的应用</p>
<h2 id="tags"><a href="#tags" class="headerlink" title="tags:"></a>tags:</h2><p>VirtualFilterChain<br>含有12个拦截器<br>当是登陆请求路径的时候即login<br>DefaultLoginPageGeneratingFilter<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doFilter</span><span class="params">(ServletRequest req, ServletResponse res, FilterChain chain)</span></span><br><span class="line">			<span class="keyword">throws</span> IOException, ServletException </span>&#123;</span><br><span class="line">		HttpServletRequest request = (HttpServletRequest) req;</span><br><span class="line">		HttpServletResponse response = (HttpServletResponse) res;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">boolean</span> loginError = isErrorPage(request);</span><br><span class="line">		<span class="keyword">boolean</span> logoutSuccess = isLogoutSuccess(request);</span><br><span class="line">		<span class="keyword">if</span> (isLoginUrlRequest(request) || loginError || logoutSuccess) &#123;</span><br><span class="line">			String loginPageHtml = generateLoginPageHtml(request, loginError,</span><br><span class="line">					logoutSuccess);</span><br><span class="line">			response.setContentType(<span class="string">"text/html;charset=UTF-8"</span>);</span><br><span class="line">			response.setContentLength(loginPageHtml.length());</span><br><span class="line">			response.getWriter().write(loginPageHtml);</span><br><span class="line"></span><br><span class="line">			<span class="keyword">return</span>;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		chain.doFilter(request, response);</span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure></p>
<p>当不是登陆的路径 应该重定向<br>通过ExceptionTranslationFilter可以重定向， 通过重定向<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">if</span> (ase != <span class="keyword">null</span>) &#123;</span><br><span class="line">	handleSpringSecurityException(request, response, chain, ase);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>ApplicationFilterChain</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[php install in centos6]]></title>
      <url>http://blog.zhangcheng.club/2016/04/07/php-install-in-centos6/</url>
      <content type="html"><![CDATA[<p>title: php install in centos6</p>
<h2 id="tags"><a href="#tags" class="headerlink" title="tags:"></a>tags:</h2><p>参考链接<br><a href="http://www.blogjava.net/nkjava/archive/2015/01/20/422289.html" target="_blank" rel="external">http://www.blogjava.net/nkjava/archive/2015/01/20/422289.html</a></p>
<p>检查是否已经安装， 如果有删除<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ yum list installed | grep php</span><br><span class="line">$ yum remove</span><br></pre></td></tr></table></figure></p>
<p>安装源<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ rpm -Uvh http://mirror.webtatic.com/yum/el6/latest.rpm</span><br></pre></td></tr></table></figure></p>
<p>安装php5.6<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ yum install php56w.x86_64 php56w-cli.x86_64 php56w-common.x86_64 php56w-gd.x86_64 php56w-ldap.x86_64 php56w-mbstring.x86_64 php56w-mcrypt.x86_64 php56w-mysql.x86_64 php56w-pdo.x86_64</span><br></pre></td></tr></table></figure></p>
<p>安装php fpm<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ yum install php56w-fpm</span><br></pre></td></tr></table></figure></p>
<p>启动fpm<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> /etc/init.d</span><br><span class="line">$ ./php-fpm start</span><br></pre></td></tr></table></figure></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[集中处理还是分散处理的选择]]></title>
      <url>http://blog.zhangcheng.club/2016/03/29/%E9%9B%86%E4%B8%AD%E5%A4%84%E7%90%86%E8%BF%98%E6%98%AF%E5%88%86%E6%95%A3%E5%A4%84%E7%90%86%E7%9A%84%E9%80%89%E6%8B%A9/</url>
      <content type="html"><![CDATA[<p>title: 集中处理还是分散处理的选择</p>
<h2 id="tags"><a href="#tags" class="headerlink" title="tags:"></a>tags:</h2><p>TODO</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Docker hello world]]></title>
      <url>http://blog.zhangcheng.club/2016/03/27/Docker-hello-world/</url>
      <content type="html"><![CDATA[<p>title: Docker hello world</p>
<h2 id="tags"><a href="#tags" class="headerlink" title="tags:"></a>tags:</h2><p>参考链接</p>
<p><a href="http://cloud.51cto.com/art/201412/460142.htm" target="_blank" rel="external">http://cloud.51cto.com/art/201412/460142.htm</a></p>
<p><a href="http://stackoverflow.com/questions/27216473/docker-1-3-fails-to-start-on-rhel6-5" target="_blank" rel="external">http://stackoverflow.com/questions/27216473/docker-1-3-fails-to-start-on-rhel6-5</a><br>需要跑<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ yum update -y device-mapper-libs</span><br><span class="line">$ docker <span class="_">-d</span></span><br></pre></td></tr></table></figure></p>
<p>才能成功<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ service start docker</span><br></pre></td></tr></table></figure></p>
<p>登录</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ docker login --username=xxx --password=xxxx --email=xxxxx</span><br><span class="line">$</span><br></pre></td></tr></table></figure>
<p><a href="http://dockone.io/" target="_blank" rel="external">http://dockone.io/</a><br><a href="http://blog.csdn.net/we_shell/article/details/38445979" target="_blank" rel="external">http://blog.csdn.net/we_shell/article/details/38445979</a><br><a href="http://www.jb51.net/LINUXjishu/333176.html" target="_blank" rel="external">http://www.jb51.net/LINUXjishu/333176.html</a><br><a href="http://www.dev-garden.org/2014/12/27/setting-up-a-docker-container-with-centos6-and-tomcat7/" target="_blank" rel="external">http://www.dev-garden.org/2014/12/27/setting-up-a-docker-container-with-centos6-and-tomcat7/</a><br><a href="http://www.csdn.net/article/2015-07-21/2825266" target="_blank" rel="external">http://www.csdn.net/article/2015-07-21/2825266</a><br><a href="https://docs.docker.com/mac/step_six/" target="_blank" rel="external">https://docs.docker.com/mac/step_six/</a><br><a href="https://docs.docker.com/engine/reference/commandline/build/" target="_blank" rel="external">https://docs.docker.com/engine/reference/commandline/build/</a><br>更新docker-engine 1.91就好 不要docker-latest, docker都起不来了</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ yum -y update docker-io</span><br><span class="line">$ wget https://get.docker.com/builds/Linux/x86_64/docker-1.91 -O /usr/bin/docker</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ docker run <span class="_">-d</span> -p 5000:5000 --name registry registry</span><br><span class="line">$ docker tag &lt;image&gt;  127.0.0.1:5000/&lt;image&gt;</span><br><span class="line">$ docker push 127.0.0.1:5000/&lt;image&gt;</span><br></pre></td></tr></table></figure>
<p>install docker-compose</p>
<p><a href="https://docs.docker.com/compose/install/" target="_blank" rel="external">https://docs.docker.com/compose/install/</a></p>
<p><a href="http://www.mamicode.com/info-detail-847142.html" target="_blank" rel="external">http://www.mamicode.com/info-detail-847142.html</a></p>
<p><a href="http://www.pangxie.space/docker/364" target="_blank" rel="external">http://www.pangxie.space/docker/364</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[安装maven]]></title>
      <url>http://blog.zhangcheng.club/2016/03/26/%E5%AE%89%E8%A3%85maven/</url>
      <content type="html"><![CDATA[<p>title: 安装maven</p>
<h2 id="tags"><a href="#tags" class="headerlink" title="tags:"></a>tags:</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ wget http://repos.fedorapeople.org/repos/dchen/apache-maven/epel-apache-maven.repo -O /etc/yum.repos.d/epel-apache-maven.repo </span><br><span class="line">$ yum -y install apache-maven</span><br></pre></td></tr></table></figure>
<p>需要在/root/.m2/路径下建立settings.xml文件</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[安装jenkins]]></title>
      <url>http://blog.zhangcheng.club/2016/03/26/%E5%AE%89%E8%A3%85jenkins/</url>
      <content type="html"><![CDATA[<p>title: 安装jenkins</p>
<h2 id="tags"><a href="#tags" class="headerlink" title="tags:"></a>tags:</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ wget -O /etc/yum.repos.d/jenkins.repo http://pkg.jenkins-ci.org/redhat/jenkins.repo </span><br><span class="line">$ rpm --import http://pkg.jenkins-ci.org/redhat/jenkins-ci.org.key</span><br><span class="line">$ yum install jenkins</span><br></pre></td></tr></table></figure>
<p>配置权限<br><img src="http://i.imgur.com/Ddm5Wh4.png?1" alt="Imgur"><br>当注册后<br><img src="http://i.imgur.com/1GvbJHj.png?1" alt="Imgur"></p>
<p>如果需要用到maven 请先安装maven<br>如果在jenkins中使用的默认的maven配置，jenkins需要以root用户启动<br><a href="http://www.php230.com/jenkins-modify-default-user.html" target="_blank" rel="external">http://www.php230.com/jenkins-modify-default-user.html</a><br>不然找不到maven配置文件，因为maven的配置文件在/root/.m2/下</p>
<p>如果项目使用github或者bitbucket<br>需要安装git插件<br>如果不能下载代码 可能需要升级git版本<br><a href="http://www.tuicool.com/articles/7buQNv" target="_blank" rel="external">http://www.tuicool.com/articles/7buQNv</a></p>
<p>如果需要远程部署，请安装Publish Over SSH</p>
<p>jenkins home 默认路径<br>/var/lib/jenkins<br>配置文件config.xml</p>
<p>useSecurity节点代表是否使用用户权限<br>authorizationStrategy节点代表用户权限<br>删除即可重新配置</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[对象定义]]></title>
      <url>http://blog.zhangcheng.club/2016/03/25/%E5%AF%B9%E8%B1%A1%E5%AE%9A%E4%B9%89/</url>
      <content type="html"><![CDATA[<p>title: 对象定义</p>
<h2 id="tags"><a href="#tags" class="headerlink" title="tags:"></a>tags:</h2><p>1.从容器中获取<br>2.属性的初始化赋值</p>
<p>解释<br>2.需要考虑到 不同的应用的所需要的属性是不一样的，属性与属性是不一样，如果只是某个方法需要那么就使用方法传值，或者多使用set方法，或者多个构造器，推荐是多个构造器，尽量不要在构造器内部使用容器获取值<br>3.要为测试做考虑，所以尽量要切入的方法 不要继承<br>4.有时候需要提供统一的入口，那么接口内部在定义私有方法 意思是<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">a()&#123;</span><br><span class="line">aInner</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="title">aInner</span><span class="params">()</span></span>&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[简谱]]></title>
      <url>http://blog.zhangcheng.club/2016/03/22/%E7%AE%80%E8%B0%B1/</url>
      <content type="html"><![CDATA[<p>title: 简谱</p>
<h2 id="tags"><a href="#tags" class="headerlink" title="tags:"></a>tags:</h2><p><a href="http://www.dumpt.com/img/viewer.php?file=7ol8643j54pz7m0kpkzt.jpg" target="_blank" rel="external">南山南</a><br><a href="http://www.dumpt.com/img/viewer.php?file=38n0nsgc8hkj2jmpk96t.jpg" target="_blank" rel="external">here we are again</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[JAVA异常处理1]]></title>
      <url>http://blog.zhangcheng.club/2016/03/22/A%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%861/</url>
      <content type="html"><![CDATA[<p>title: 布尔类型或者异常</p>
<h2 id="tags"><a href="#tags" class="headerlink" title="tags:"></a>tags:</h2><p>当这个方法需要抛出多个异常的，也就是多中可能的时候，那么使用异常<br>当你只需要知道对或者错，对其他的错误不感兴趣的时候，那么使用布尔</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">myMethod</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">// Some code</span></span><br><span class="line">    validate(some_object_or_condition);</span><br><span class="line">    <span class="comment">// Some code</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">validate</span><span class="params">(Object arg)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// Code that validates the argument and throws an exception if it's invalid</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">myMethod</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">    <span class="comment">// Some code</span></span><br><span class="line">    <span class="keyword">if</span>( !isValid(some_object_or_condition) );</span><br><span class="line">    <span class="comment">// Some code</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">boolean</span> <span class="title">isValid</span><span class="params">(Object arg)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// Code that returns a boolean based on whether or not the argument is valid</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[JAVA日志处理]]></title>
      <url>http://blog.zhangcheng.club/2016/03/22/JAVA%E6%97%A5%E5%BF%97%E5%A4%84%E7%90%86/</url>
      <content type="html"><![CDATA[<p>title: JAVA日志处理</p>
<h2 id="tags"><a href="#tags" class="headerlink" title="tags:"></a>tags:</h2><p>wait to log</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[JAVA异常处理]]></title>
      <url>http://blog.zhangcheng.club/2016/03/21/%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86/</url>
      <content type="html"><![CDATA[<p>title: 异常处理</p>
<h2 id="tags"><a href="#tags" class="headerlink" title="tags:"></a>tags:</h2><p>参考链接</p>
<p><a href="http://www.iteye.com/news/27078" target="_blank" rel="external">http://www.iteye.com/news/27078</a></p>
<p>需要关心的问题</p>
<ol>
<li>异常的国际化</li>
<li>service层是否需要返回异常，还是定义response</li>
<li>查询与更新是否应该在一个事务里</li>
<li>第三方框架抛出的声明式异常</li>
<li>异常数据记录</li>
<li>内部异常的作用</li>
</ol>
<p>处理意见<br>1.在fault barrier中处理</p>
<p>2.service层还是返回response, 定义业务枚举，常用的全局异常还是需要定义的，例如ObjectNotFoundException, ParameterValidateException,这些都是service,还是可以返回异常的，将枚举放到异常里面</p>
<p>3.最好在，这样调用service的次数能够从两次减少到一次，这个不强求<br>4.检查型的异常将其转化成非检查型异常即RuntimeException<br>5.好的异常处理也意味着记录相关数据，而不仅仅是堆栈跟踪，在自定义异常中定义Map,将数据加进去<br>6.在一个大方法中可能有很多的逻辑，需要拆成许多小方法，如果不使用异常的话会有多个return, 为了避免出现多个return,定义内部异常并且应该为检查型异常，在大方法后面中被catch</p>
<p>在方法内部尽量不要去catch异常</p>
<h3 id="fault-barrier"><a href="#fault-barrier" class="headerlink" title="fault barrier"></a>fault barrier</h3><p>需要去catch掉全局定义的异常</p>
<h3 id="controller层"><a href="#controller层" class="headerlink" title="controller层"></a>controller层</h3><p>不需要去catch掉全局定义的异常<br>ParameterValidateWebException 对于service层中的ParameterValidateException controller是当做系统异常的</p>
<h3 id="service层"><a href="#service层" class="headerlink" title="service层"></a>service层</h3><p>ParameterValidateException </p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[阿里云遭遇病毒]]></title>
      <url>http://blog.zhangcheng.club/2016/03/20/%E9%98%BF%E9%87%8C%E4%BA%91%E9%81%AD%E9%81%87%E7%97%85%E6%AF%92/</url>
      <content type="html"><![CDATA[<p>title: 阿里云遭遇病毒<br>tags:</p>
<ul>
<li>阿里云</li>
<li>病毒</li>
</ul>
<hr>
<p>参考链接</p>
<p><a href="http://ivan.iteye.com/blog/2205402" target="_blank" rel="external">http://ivan.iteye.com/blog/2205402</a></p>
<p><a href="http://blog.csdn.net/hylongsuny/article/details/7834780" target="_blank" rel="external">http://blog.csdn.net/hylongsuny/article/details/7834780</a></p>
<p>阿里云碰到两次，syn病毒和netstat病毒，但处理的方式都是差不多的，这些病毒单纯靠kill 进程PID杀不死，还是会不断重生<br>1.首先可以找到有伪装的程序 即母程序，一般都是.sshd<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">find /usr -ctime -1</span><br><span class="line">ps -ef|grep .sshd</span><br><span class="line"><span class="built_in">kill</span> -9 pid</span><br><span class="line">rm -rf /xxx/.shhd</span><br></pre></td></tr></table></figure></p>
<p>这个时候我们再删除的syn或netstat相应的程序就可以</p>
<p>2.修改登录用户密码 passwd</p>
<p>3.再更新几个软件<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">$ rpm -q net-tools </span><br><span class="line">$ net-tools-1.60-110.el6_2.x86_64 </span><br><span class="line">$ yumdownloader net-tools </span><br><span class="line">$ rpm -ivh net-tools-1.60-110.el6_2.x86_64.rpm --force --nodeps </span><br><span class="line"></span><br><span class="line">$ rpm -q procps </span><br><span class="line">$ procps-3.2.8-25.el6.x86_64 </span><br><span class="line">$ yumdownloader procps </span><br><span class="line">$ rpm -ivh procps-3.2.8-30.el6.x86_64.rpm --force --nodeps </span><br><span class="line"></span><br><span class="line">$ rpm -q lsof </span><br><span class="line">$ lsof-4.82-4.el6.x86_64 </span><br><span class="line">$ yumdownloader lsof </span><br><span class="line">$ rpm -ivh lsof-4.82-4.el6.x86_64.rpm --force --nodeps</span><br></pre></td></tr></table></figure></p>
<p>4.安装denyhosts<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ wget http://packages.sw.be/rpmforge-release/rpmforge-release-0.5.2-2.el6.rf.x86_64.rpm</span><br><span class="line">$ rpm -ivh rpmforge-release-0.5.2-2.el6.rf.x86_64.rpm</span><br><span class="line">$ yum install -y denyhosts</span><br><span class="line">$ service denyhosts start</span><br></pre></td></tr></table></figure></p>
<p>5.当然你很可能把自己给屏蔽，如果屏蔽了， 通过阿里云的终端登录，将自己ip加入到白名单里<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ vi /etc/hosts.allow</span><br></pre></td></tr></table></figure></p>
<p>在文件下面添加<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">all:101.101.101.*</span><br></pre></td></tr></table></figure></p>
<p>查看登录记录<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ more /var/<span class="built_in">log</span>/secure |grep Accepted</span><br><span class="line">$ less /var/<span class="built_in">log</span>/secure</span><br></pre></td></tr></table></figure></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[南山南歌词]]></title>
      <url>http://blog.zhangcheng.club/2016/03/19/can-not-sleep/</url>
      <content type="html"><![CDATA[<h2 id="tags-谱"><a href="#tags-谱" class="headerlink" title="tags:谱"></a>tags:谱</h2><p>你在南方的城市里</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[阿里云搭建VPN]]></title>
      <url>http://blog.zhangcheng.club/2016/03/19/vpn-pptpd/</url>
      <content type="html"><![CDATA[<p>title: aaaaaa</p>
<h2 id="tags-nihao"><a href="#tags-nihao" class="headerlink" title="tags:nihao"></a>tags:nihao</h2><p>参考链接<a href="http://blog.csdn.net/johnnycode/article/details/45543157" target="_blank" rel="external">http://blog.csdn.net/johnnycode/article/details/45543157</a></p>
<h3 id="安装-ppp-pptpd-iptables"><a href="#安装-ppp-pptpd-iptables" class="headerlink" title="安装 ppp pptpd iptables"></a>安装 ppp pptpd iptables</h3><p>ppp 数据链路层协议</p>
<p>pptpd VPN服务类型之一</p>
<p>iptables 防火墙,用来消息转发<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ yum install -y ppp pptpd iptables</span><br></pre></td></tr></table></figure></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ vi /etc/ppp/options.pptpd</span><br></pre></td></tr></table></figure>
<p>作如下修改<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#ms-dns 10.0.0.1  </span><br><span class="line">#ms-dns 10.0.0.2  </span><br><span class="line"># 找到上面两行 换成下面两行</span><br><span class="line">ms-dns 8.8.8.8  </span><br><span class="line">ms-dns 8.8.4.4</span><br></pre></td></tr></table></figure></p>
<p>添加用户名和密码<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ vi /etc/ppp/chap-secrets</span><br></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#在文件下面添加</span><br><span class="line">zhangcheng pptpd 123456 *</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ vi /etc/pptpd.conf</span><br></pre></td></tr></table></figure>
<p>把下面两行注释去掉（即#键）<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#localip 192.168.0.1  </span><br><span class="line">#remoteip 192.168.0.234-238,192.168.0.245</span><br></pre></td></tr></table></figure></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/sysctl.conf</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">net.ipv4.ip_forward = 0  </span><br><span class="line">应该改成</span><br><span class="line">net.ipv4.ip_forward = 1</span><br></pre></td></tr></table></figure>
<p>需要重新加载<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sysctl -p</span><br></pre></td></tr></table></figure></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ iptables -t nat -A POSTROUTING <span class="_">-s</span> 192.168.0.0/24 -o eth1 -jMASQUERADE </span><br><span class="line"></span><br><span class="line">$ service iptables save </span><br><span class="line">$ service iptables start</span><br><span class="line">$ service pptpd restart <span class="comment">#重新启动 pptpd</span></span><br></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Mysql数据库的备份]]></title>
      <url>http://blog.zhangcheng.club/2016/03/18/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%A4%87%E4%BB%BD/</url>
      <content type="html"><![CDATA[<p>tags: backup mysql</p>
<hr>
<h3 id="备份"><a href="#备份" class="headerlink" title="备份"></a>备份</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ mysqldump -u root -p zebra &gt; zebra.sql</span><br></pre></td></tr></table></figure>
<h3 id="还原"><a href="#还原" class="headerlink" title="还原"></a>还原</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">source</span> zebra.sql</span><br></pre></td></tr></table></figure>
<p>###备份的脚本</p>
<p>参考借鉴<a href="http://88250.b3log.org/backup-mysql-shell" target="_blank" rel="external">http://88250.b3log.org/backup-mysql-shell</a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> /home/scripts</span><br><span class="line">$ vi backup_mysql.sql</span><br></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">#database need to backup</span><br><span class="line">databases=(zebra cicada)</span><br><span class="line"># backup dir</span><br><span class="line">backup_dir=&apos;/home/backup/mysql/&apos;</span><br><span class="line"></span><br><span class="line"># create the folder if it does not exist</span><br><span class="line">if [ ! -d &quot;$backup_dir&quot; ]; then</span><br><span class="line">  mkdir -p &quot;$backup_dir&quot;</span><br><span class="line">fi</span><br><span class="line"># 循环databases数组</span><br><span class="line">for db in $&#123;databases[*]&#125;</span><br><span class="line">  do</span><br><span class="line">   # 备份数据库生成SQL文件</span><br><span class="line">   mysqldump -uUSER -pPASSWORD --database $db &gt; $backup_dir$db-$(date +%Y%m%d).sql</span><br><span class="line">   # 将生成的SQL文件压缩</span><br><span class="line">   tar zPcf $backup_dir$db-$(date +%Y%m%d).sql.tar.gz $backup_dir$db-$(date +%Y%m%d).sql</span><br><span class="line">   # 删除7天之前的备份数据</span><br><span class="line">   find $backup_dir -mtime +7 -name &quot;*.sql.tar.gz&quot; -exec rm -rf &#123;&#125; \;</span><br><span class="line">  done</span><br><span class="line"># 删除生成的SQL文件</span><br><span class="line">rm -rf $backup_dir/*.sql</span><br></pre></td></tr></table></figure>
<h3 id="Linux下定时跑"><a href="#Linux下定时跑" class="headerlink" title="Linux下定时跑"></a>Linux下定时跑</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ crontab <span class="_">-e</span></span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 每天晚上9:00跑 需要有执行权限</span><br><span class="line">0 21 * * * . /etc/profile;/bin/sh /home/scripts/mysql_backup.sh</span><br></pre></td></tr></table></figure>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Start hexo]]></title>
      <url>http://blog.zhangcheng.club/2016/03/18/Start-hexo/</url>
      <content type="html"><![CDATA[<p>title: hexo<br>后台启动<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ nohup hexo server &gt; /var/<span class="built_in">log</span>/blog.log &amp;</span><br></pre></td></tr></table></figure></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>http://blog.zhangcheng.club/2016/03/18/hello-world/</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    </entry>
    
  
  
</search>
